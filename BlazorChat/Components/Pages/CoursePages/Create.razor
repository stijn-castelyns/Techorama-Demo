@page "/admin/courses/create"
@inject BlazorChat.Infra.CourseDbContext DB
@using BlazorChat.Extensions
@using BlazorChat.Models
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1 class="text-4xl font-extrabold text-gray-900 tracking-tight mt-4 mb-6 text-center sm:text-5xl md:text-6xl">
    Create new Course
</h1>
<hr class="my-4 border-gray-300" />
<div class="flex container mx-auto flex-wrap">
    <div class="w-full md:w-1/3">
        <EditForm method="post" Model="Course" OnValidSubmit="AddCourse" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-red-600 mb-4" />
            <div class="mb-6">
                <label for="coursetitle" class="block text-gray-700 text-sm font-bold mb-2">CourseTitle:</label>
                <InputText id="coursetitle" @bind-Value="Course.CourseTitle" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
                <ValidationMessage For="() => Course.CourseTitle" class="text-red-600" />
            </div>
            <div class="mb-6">
                <label for="numberofdays" class="block text-gray-700 text-sm font-bold mb-2">NumberOfDays:</label>
                <InputNumber id="numberofdays" @bind-Value="Course.NumberOfDays" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" />
                <ValidationMessage For="() => Course.NumberOfDays" class="text-red-600" />
            </div>
            <div class="mb-6">
                <label for="htmlfilename" class="block text-gray-700 text-sm font-bold mb-2">HtmlFileName:</label>
                <InputText id="htmlfilename" @bind-Value="Course.HtmlFileName" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" />
                <ValidationMessage For="() => Course.HtmlFileName" class="text-red-600" />
            </div>
            <div class="mb-6">
                <label for="learninggoals" class="block text-gray-700 text-sm font-bold mb-2">LearningGoals:</label>
                <InputText id="learninggoals" @bind-Value="Course.LearningGoals" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" />
                <ValidationMessage For="() => Course.LearningGoals" class="text-red-600" />
            </div>
            <div class="mb-6">
                <label for="targetaudience" class="block text-gray-700 text-sm font-bold mb-2">TargetAudience:</label>
                <InputText id="targetaudience" @bind-Value="Course.TargetAudience" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" />
                <ValidationMessage For="() => Course.TargetAudience" class="text-red-600" />
            </div>
            <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                Create
            </button>
        </EditForm>
    </div>
</div>

<div class="mt-6">
    <a href="/admin/courses" class="text-blue-500 hover:text-blue-600">Back to List</a>
</div>


@code {

    [SupplyParameterFromForm]
    public Course Course { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddCourse()
    {
        Course.CourseTitleSlug = Course.CourseTitle.ToUrlSlug();
        DB.Courses.Add(Course);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/admin/courses");
    }
}
