<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:mso="urn:schemas-microsoft-com:office:office" xmlns:msdt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882">

<head>
    <title>Querying SQL Server with Transact-SQL</title>
    <meta name="NumberOfDays" content="3">

    <!--[if gte mso 9]><xml>
<mso:CustomDocumentProperties>
<mso:ContentTypeId msdt:dt="string">0x0101009C33340F38E14D1EABEAC83093A8F17200C4915C8A8F98404A8E6C88EEF971516C</mso:ContentTypeId>
</mso:CustomDocumentProperties>
</xml><![endif]-->

    <!--[if gte mso 9]><xml>
<mso:CustomDocumentProperties>
</mso:CustomDocumentProperties>
</xml><![endif]-->
</head>

<body>
    <h2>Learning Goals</h2>
    <p>
        The goal of this course is to provide students with the technical skills required to write basic Transact-SQL queries for
        Microsoft SQL Server. The course covers querying SQL Server 2019 or previous versions as well as Azure SQL Databases.
    </p>
    <h2>Target Audience</h2>
    <p>
        This course is intended for SQL Server database administrators and developers who are responsible for writing queries but
        have no or very limited experience in writing T-SQL SELECT statements.
    </p>
    <h2>Prerequisites</h2>
    <p>
        This introductory course requires no special skills.
    </p>
    
    <h2>Course Outline</h2>
    <h4>Introduction to Transact-SQL and the Querying Tools</h4>
    <p>
        Before you can get started writing T-SQL code, you must master the tool that we will mainly use throughout this classroom
        training: SQL Server Management Studio. But there are other useful tools as well to discover in this module:
    </p>
    <ul>
        <li>SQL Server Object Hierarchy</li>
        <li>Introduction to SQL Server Management Studio</li>
        <li>Working with Azure Data Studio</li>
        <li>Using the graphical query builder in Management Studio</li>
        <li>Connecting to SQL Server from Excel or Power BI </li>
        <li>A brief history of SQL Server</li>
        <li>LAB: Learning the Tools</li>
    </ul>


    <h4>SELECT Fundamentals</h4>
    <p>
        The SELECT statement is very important in T-SQL. It allows to retrieve data from tables and views. But that data may need to
        be filtered, both in the rows and columns we return, and sorted. Another crucial concept discussed in this module is that of
        expressions, which allow us to combine multiple columns into one computed column before we return the result.
    </p>
    <ul>
        <li>Basic SELECT Statement</li>
        <li>T-SQL Expressions</li>
        <li>Formatting Result Sets</li>
        <li>The CASE Statement</li>
        <li>Fetching Data from Tables</li>
        <li>Filtering Data </li>
        <li>Sorting Data </li>
        <li>Combining Multiple Result Sets: UNION, EXCEPT and INTERSECT</li>
        <li>LAB: Selecting from the AdventureWorks Database</li>
    </ul>


    <h4>Aggregating Data</h4>
    <p>
        Often the data stored in the database is more detailed than the result we are interested in. This module shows how to aggregate
        multiple values into a group, and how to compute aggregated values on top of these groups. The following topics are
        covered in this module:
    </p>
    <ul>
        <li>Using Aggregation Functions</li>
        <li>GROUP BY Fundamentals</li>
        <li>Filtering on Groups Using the HAVING Clause</li>
        <li>Computing Subtotals Using the ROLLUP and CUBE Clauses</li>
        <li>LAB: Aggregating Data</li>
    </ul>

    <h4>Joining Multiple Tables</h4>
    <p>
        Most operational databases are normalized: the data is spread over multiple tables. But when building reports, we need to
        join these different tables to get the answer we need. That's why mastering the different techniques to combine tables
        in a single result is crucial. In this module we cover two important ways: via joins and via nested queries.
    </p>
    <ul>
        <li>Database Normalization</li>
        <li>Inner Join</li>
        <li>Left, Right and Full Outer Join</li>
        <li>Cross Join</li>
        <li>Joining a table with itself</li>
        <li>Creating Nested Queries</li>
        <li>LAB: Joining Contacts, Employees and More</li>
    </ul>

    <h4>Advanced SELECT</h4>
    <p>
        Some queries are a bit more challenging to write. For instance, how do you retrieve for each country the three most important
        customers? How do you calculate the day of week from a date? These and other T-SQL challenges get solved in this
        module. The following topics are covered in this module:
    </p>
    <ul>
        <li>Using Functions in your queries</li>
        <li>Data Types</li>
        <li>Conversion Between Data Types</li>
        <li>The CROSS APPLY Statement</li>
        <li>LAB: Selecting Data, the Hard Parts</li>
    </ul>

    <h4>Modifying Data</h4>
    <p>
        Sometimes there is the need to insert new data into the database. Or old data needs an update or has to be deleted.
        This module shows you the basics of how this can be done. The following topics are covered in this module:
    </p>
    <ul>
        <li>Understanding Transactions</li>
        <li>Inserting Data</li>
        <li>Updating Existing Records</li>
        <li>Deleting Data</li>
        <li>Truncating a Table</li>
        <li>Intro Into Constraints</li>
        <li>LAB: Updating Customers in AdventureWorks</li>
    </ul>
    
    
    <h4>Advanced Querying Techniques</h4>
    <p>
        This module basically continues on the theme of the Advanced SELECT module: Special T-SQL constructs that can make hard
        queries easy to write. Converting data stored in columns into rows, adding row numbers or figuring out which items
        are more than a certain number of levels deep in a hierarchy, that's the kind of problems we will look into in this module.
        The following topics are covered in this module:
    </p>
    <ul>
        <li>Creating T-SQL Scripts</li>
        <li>Common Table Expressions</li>
        <li>Writing Recursive CTEs</li>
        <li>Using the OVER-clause</li>
        <li>Using Ranking Functions with the Over Clause</li>
        <li>Analytic functions with the Over Clause</li>
        <li>PIVOT and UNPIVOT Statements</li>
        <li>LAB: Querying a Data Warehouse</li>
    </ul>


    <h4>Views, Stored Procedures and Functions</h4>
    <p>
        Writing queries can also be the starting point for a database developer. Then you might want to share your queries with others
        via views, functions or stored procedures, which are exactly the topics covered in this module. Notice that we only
        cover an introduction into these things, for a in depth coverage you better attend the
        <a href="/cc/usqld">Developing and optimizing SQL Server databases</a> training.
    </p>
    <ul>
        <li>Introduction to Views</li>
        <li>Introduction to Stored Procedures</li>
        <li>Introduction to User-defined Functions</li>
        <li>LAB: Views, Stored Procedures and Functions</li>
    </ul>
</body>

</html>